apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: client
  name: client
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: client
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: client
    spec:
      containers:
      - args:
        - npm
        - run
        - start
        env:
        - name: MYSQL_DATABASE
          value: handf
        - name: MYSQL_PASSWORD
          value: topher123
        - name: MYSQL_ROOT_PASSWORD
          value: topher123
        - name: MYSQL_USER
          value: root
        - name: NODE_PATH
          value: src
        - name: REACT_APP_SERVER_PORT
          value: "3000"
        image: client
        imagePullPolicy: ""
        name: client
        ports:
        - containerPort: 3000
        resources: {}
        stdin: true
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd:
      C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: client
  name: client
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: client
status:
  loadBalancer: {}

  apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: handf
        - name: MYSQL_PASSWORD
          value: topher123
        - name: MYSQL_ROOT_PASSWORD
          value: topher123
        - name: MYSQL_USER
          value: root
        - name: REACT_APP_SERVER_PORT
          value: "3000"
        image: mysql
        imagePullPolicy: ""
        name: mysql
        ports:
        - containerPort: 3306
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql
  name: mysql
spec:
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    io.kompose.service: mysql
status:
  loadBalancer: {}

  apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: phpmyadmin
  name: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: phpmyadmin
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: phpmyadmin
    spec:
      containers:
      - env:
        - name: PMA_HOST
          value: mysql
        image: phpmyadmin/phpmyadmin
        imagePullPolicy: ""
        name: phpmyadmin
        ports:
        - containerPort: 80
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: phpmyadmin
  name: phpmyadmin
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 80
  selector:
    io.kompose.service: phpmyadmin
status:
  loadBalancer: {}

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
    spec:
      containers:
      - args:
        - redis-server
        - /redis.conf
        image: redis:latest
        imagePullPolicy: ""
        name: redis
        ports:
        - containerPort: 6379
        resources: {}
      hostname: redis
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  ports:
  - name: "6379"
    port: 6379
    targetPort: 6379
  selector:
    io.kompose.service: redis
status:
  loadBalancer: {}

  apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: server
  name: server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: server
    spec:
      containers:
      - args:
        - node
        - index.js
        env:
        - name: DB_DATABASE
          value: handf
        - name: DB_HOST
          value: mysql
        - name: DB_PASSWORD
          value: topher123
        - name: DB_USER
          value: root
        - name: PORT
          value: "3010"
        - name: REDIS
          value: redis://redis:6379
        image: server
        imagePullPolicy: ""
        name: server
        ports:
        - containerPort: 3010
        - containerPort: 3000
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: server
  name: server
spec:
  ports:
  - name: "3010"
    port: 3010
    targetPort: 3010
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    io.kompose.service: server
status:
  loadBalancer: {}
